/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                   GENERAL INFORMATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

manifest {
    name = 'mpxv_nextflow'
    author = 'AG'
    description = 'nextflow wrapper for running the MPXV pipeline'
    mainScript = 'main.nf'
    nextflowVersion = '>=20.07.1'
    version = 'latest'
}

// Global default params, used in configs
params {
    help = false

    fasta_path =  "$projectDir/assets/diphtheria.fasta" 
    ref_fasta_path = ""
    meta_path = ""
    ref_gff_path = ""
    bakta_db_type = "" // light or full
    bakta_db_path = ""

    env_yml = ""
    scicomp = false

    run_submission = true
    run_vadr = false 
    run_liftoff = false
    run_bakta = false
    cleanup = true

    clear_nextflow_log = null
    clear_work_dir = null
    clear_conda_env = null
    clear_nf_results = null

    output_dir = ""
    overwrite_output = null

    val_output_dir = ""
    val_date_format_flag = 's'
    val_keep_pi = false

    final_liftoff_output_dir = ""
    lift_print_version_exit = null
    lift_print_help_exit = null
    lift_parallel_processes = 8
    lift_delete_temp_files = null
    lift_coverage_threshold = null
    lift_child_feature_align_threshold = null
    lift_unmapped_features_file_name = 'output.unmapped_features.txt'
    lift_copy_threshold = null
    lift_distance_scaling_factor = null
    lift_flank = null
    lift_overlap = null
    lift_mismatch = null
    lift_gap_open = null
    lift_gap_extend = null
    lift_infer_transcripts = null
    lift_copies = null
    lift_minimap_path = 'N/A' 
    lift_feature_database_name = 'N/A'

    vadr_output_dir = ""
    vadr_models_dir = "$projectDir/vadr_files/mpxv-models"

    bakta_output_dir = ""
    prodigal_tf = null
    proteins = null
    bakta_min_contig_length = null
    bakta_threads = null
    bakta_genus = null
    bakta_species = null
    bakta_strain = null
    bakta_plasmid = null
    bakta_locus = null
    bakta_locus_tag = null
    bakta_translation_table = null
    

    submission_output_dir = ""
    submission_wait_time = ""
    submission_only_meta = ""
    submission_only_gff = ""
    submission_only_fasta = ""
    processed_samples = ""
    submission_config = ""
    req_col_config = ""
    batch_name = "" 
    send_submission_email = false
    submission_database = "submit"
    submission_prod_or_test = "test"

   }
   

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             PROFILES 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

profiles {

    // parameter sets 
    standard {
        try {
            includeConfig "conf/standard_params.config"
        } catch (Exception e) {
            System.err.println("WARNING: Could not load standard_params.config from ${projectDir}/conf/")
        }
    }
    test {
            if ( params.run_liftoff == true ) {
                try {
                     includeConfig "conf/test_virus_params.config" 
                } catch (Exception e) {
                    System.err.println("WARNING: Could not load test_virus_params.config from ${projectDir}/conf/")
                }
            } else if (params.run_vadr == true) {
                try {
                    includeConfig "conf/test_virus_params.config"
                } catch (Exception e) {
                    System.err.println("WARNING: Could not load test_virus_params.config from ${projectDir}/conf/")
                }
            } else if (params.run_bakta == true) {
                try {
                    includeConfig "conf/test_bacteria_params.config"
                } catch (Exception e) {
                     System.err.println("WARNING: Could not load test_bacteria_params.config from ${projectDir}/conf/")
                }
            }
        
    }

    // run docker + specify settings 
    conda {
        params.enable_conda    = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }

        process {
            withLabel: main {
                container = "$projectDir/app/singularity/containers/singularity_docker.sif"
            }
        }
    }

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               NEXTFLOW TOWER SETTINGS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

tower {
    enabled = false
    accessToken = '<your token>'
    workspaceId = '<your workspace id>'
}

